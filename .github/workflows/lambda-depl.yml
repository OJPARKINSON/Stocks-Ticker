# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: lambda-depl

on:
  push:
    branches:
      - master

jobs:
  deploy_JS:
    name: build and deploy lambda
    strategy:
      matrix:
        node-version: [16.x]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies, Build application and Zip dist folder contents
        run: npm i --prefix ./JS && cd ./JS && zip bundle.zip index.js -r node_modules && mv bundle.zip ../
      - name: deploy zip to aws lambda
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: Stonks
          zip_file: bundle.zip
  deploy_GO:
    name: deploy lambda function
    strategy:
      matrix:
        go-version: [1.13.x]
    runs-on: ubuntu-latest
    steps:
      - name: checkout source code
        uses: actions/checkout@v1
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Build binary
        run: cd GoLang && go get github.com/aws/aws-lambda-go/events && go get github.com/aws/aws-lambda-go/lambda && go get github.com/joho/godotenv && CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v -a -o main main.go && zip deployment.zip main && mv deployment.zip ../
      - name: default deploy
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: GoLang_Stocks
          zip_file: deployment.zip
